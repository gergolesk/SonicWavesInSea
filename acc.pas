unit acc;

interface
uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, Buttons, ExtCtrls, SDL_sdlbase, Menus,
  SDL_Colsel, SDL_NumLab, SDL_plot3d, ComCtrls, jpeg, math, CheckLst;


type TMech = record
       name:array[1..30] of char;
       a:array[1..31] of real;
       x:integer;
       y:integer;
     end;

     TField = record
       fld:array[1..24,1..64] of real;
       fldc:array[1..24,1..32] of real;
     end;

const
  a1:array[1..31] of real = (38,38,38,40,41,56,41,41,43,51,47,51,47,58,68,68,74,62,67,62,57,65,60,68,57,61,70,72,56,53,54);
  a2:array[1..31] of real = (19,15,10,25,12,12,26,55,33,33,64,41,42,50,35,48,46,43,43,52,61,55,47,54,59,65,65,65,50,39,41);
  a3:array[1..31] of real = (19,26,25,19,17,18,53,53,33,37,37,40,54,53,42,43,48,47,54,51,55,71,65,61,56,52,61,70,73,59,65);
  corr:array[1..31] of single = (0,0,2.5,5.5,8.3,11,14,14.6,15.5,16.3,16,18,18.8,19.5,20.5,21,21.8,22.5,23.5,24.2,25,25.5,26,26.5,27,27.5,28,28.5,29,29.5,30);

  db:array[1..24,1..64] of byte =((125,121,117,113,109,105,101,97,93,89,85,81,77,73,66,62,60,57,55,51,48,46,43,38,36,32,29,25,22,21,19,19,19,21,22,25,29,32,36,38,43,46,48,51,55,57,60,62,66,73,77,81,85,89,93,97,101,105,109,113,117,121,125,128),
                                  (125,121,117,113,109,105,101,97,93,89,85,81,77,73,66,62,60,57,53,50,48,46,43,38,35,32,28,25,21,20,18,18,18,20,21,25,28,32,35,38,43,46,48,50,53,57,60,62,66,73,77,81,85,89,93,97,101,105,109,113,117,121,125,128),
                                  (124,120,117,113,109,105,104,97,93,89,85,81,77,73,66,62,60,57,53,50,48,45,43,38,35,30,27,24,21,19,18,17,18,19,21,24,27,30,35,38,43,45,48,50,53,57,60,62,66,73,77,81,85,89,93,97,104,105,109,113,117,120,124,127),
                                  (124,120,116,112,108,104,100,96,93,89,85,81,77,73,66,62,60,57,53,50,48,45,42,38,34,30,27,22,20,18,17,16,17,18,20,22,27,30,34,38,42,45,48,50,53,57,60,62,66,73,77,81,85,89,93,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,66,61,60,57,53,50,48,45,42,38,32,30,26,22,19,17,16,15,16,17,19,22,26,30,32,38,42,45,48,50,53,57,60,61,66,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,53,50,48,45,42,38,32,30,26,21,19,17,15,14,15,17,19,21,26,30,32,38,42,45,48,50,53,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,38,32,30,25,21,18,16,14,13,14,16,18,21,25,30,32,38,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,21,18,16,13,12,13,16,18,21,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,18,15,12,10,12,15,18,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,17,14,12,6,12,14,17,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,17,14,10,3,10,14,17,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,17,14,10,0,10,14,17,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,17,14,10,3,10,14,17,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,17,14,12,6,12,14,17,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,24,20,18,15,12,10,12,15,18,20,24,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,36,32,28,25,21,18,15,13,12,13,15,18,21,25,28,32,36,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,52,49,47,44,40,38,32,30,26,21,18,16,14,13,14,16,18,21,26,30,32,38,40,44,47,49,52,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,65,61,59,56,53,50,48,45,42,38,32,30,26,21,19,17,15,14,15,17,19,21,26,30,32,38,42,45,48,50,53,56,59,61,65,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,92,88,84,80,76,72,66,61,60,57,53,50,48,45,42,38,32,30,27,22,19,17,16,5,16,17,19,22,27,30,32,38,42,45,48,50,53,57,60,61,66,72,76,80,84,88,92,96,100,104,108,112,116,120,124,127),
                                  (124,120,116,112,108,104,100,96,93,89,85,81,77,73,66,62,60,57,53,50,48,45,42,38,34,30,27,22,20,18,17,16,17,18,20,22,27,30,34,38,42,45,48,50,53,57,60,62,66,73,77,81,85,89,93,96,100,104,108,112,116,120,124,127),
                                  (124,120,117,113,109,105,101,97,93,89,85,81,77,73,66,62,60,57,53,50,48,45,43,38,35,30,28,24,21,19,18,17,18,19,21,24,28,30,35,38,43,45,48,50,53,57,60,62,66,73,77,81,85,89,93,97,101,105,109,113,117,120,124,127),
                                  (125,121,117,113,109,105,101,97,93,89,85,81,77,73,66,62,60,57,53,50,48,46,43,38,35,32,28,24,21,20,18,18,18,20,21,24,28,32,35,38,43,46,48,50,53,57,60,62,66,73,77,81,85,89,93,97,101,105,109,113,117,121,125,128),
                                  (125,121,117,113,109,105,101,97,93,89,85,81,77,73,66,62,60,57,55,51,48,46,43,38,36,32,29,24,22,21,19,19,19,21,22,24,29,32,36,38,43,46,48,51,55,57,60,62,66,73,77,81,85,89,93,97,101,105,109,113,117,121,125,128),
                                  (125,121,117,113,109,105,104,97,93,89,85,81,77,73,66,63,60,58,55,51,48,46,43,40,36,32,29,27,24,21,20,20,20,21,24,27,29,32,36,40,43,46,48,51,55,58,60,63,66,73,77,81,85,89,93,97,104,105,109,113,117,121,125,128));
var
  fmech:file of TMech;
  i,j,k:integer;
  n:byte;
  mech:array[1..20] of TMech;
  s:TMech;

  f:array[1..20] of real;

  field:array[1..20] of TField;
  La:array[1..32,1..24] of real;
  mtx,result:textfile;
  sum:real;

  function mech_read:TStrings;
  procedure calc(freq:integer);
  procedure saving_mech;

implementation

procedure rotate(rot:byte; n:integer); //0 - сдвиг вверх (<11), 1 - вниз (>11)
var
  temp:array[1..32] of real;
  i,j:integer;
begin
  if (rot=0) then
  begin
    for j:=1 to 32 do
      temp[j]:=field[n].fldc[1,j];

    for i:=1 to 23 do
    begin
      for j:=1 to 32 do
      begin
        field[n].fldc[i,j]:=field[n].fldc[i+1,j];
      end;
    end;
    for j:=1 to 32 do
      field[n].fldc[24,j]:=temp[j];
  end
  else
  begin
   for j:=1 to 32 do
      temp[j]:=field[n].fldc[24,j];

    for i:=24 downto 2 do
    begin
      for j:=1 to 32 do
      begin
        field[n].fldc[i,j]:=field[n].fldc[i-1,j];
      end;
    end;
    for j:=1 to 32 do
      field[n].fldc[1,j]:=temp[j];
  end;
end;

procedure saving_mech;
var
  i:integer;
begin
  assignfile(fmech,'mech.dat');
  rewrite(fmech);
  for i:=1 to n do
    write(fmech, mech[i]);
  closefile(fmech);
end;


function mech_read:TStrings;
var
  st:TStrings;
  i:byte;
  s:string;
begin
  st:=TStringList.Create;
  assignfile(fmech,'mech.dat');
  reset(fmech);
  n:=0;
  while not eof(fmech) do
  begin
    inc(n);
    read(fmech,mech[n]);
    st.Add(mech[n].name);
  end;
  mech_read:=st;
  closefile(fmech);

end;

procedure calc(freq:integer);
begin
  //mech_read;
  //коррекция на выбранной частоте
  for i:=1 to n do
    f[i]:=mech[i].a[freq]-corr[freq];

   
  //формирование полей для всех механизмов
  for k:=1 to n do
  begin
    for i:=1 to 24 do
    begin
      for j:=1 to 64 do
      begin
        field[k].fld[i,j]:=f[k]-db[i,j];
      end;
    end;
  end;

  //смещение и ротация полей для всех механизмов
  //смещение
  for k:=1 to n do
  begin
    for i:= 1 to 24 do
    begin
      for j:=1 to 32 do
      begin
        field[k].fldc[i,j]:=field[k].fld[i,j+32-mech[k].x];
      end;
    end;
  end;

   //ротация
  for k:=1 to k do
  begin
    if 12-mech[k].y>0 then
    begin
      for i:=1 to 12-mech[k].y do
        rotate(0,k);
    end
    else
    begin
      for i:=1 to mech[k].y-12 do
        rotate(1,k);
    end;
  end;

  //суммирование
  for i:=1 to 24 do
  begin
    for j:=1 to 32 do
    begin
      sum:=0;
      for k:=1 to 3 do
      begin
        sum:=sum+power(10,0.1*field[k].fldc[i,j]);
      end;
      La[i,j]:=10*log10(sum);
    end;
  end;

end;

end.
